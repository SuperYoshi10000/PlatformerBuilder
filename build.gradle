import org.gradle.internal.os.OperatingSystem

plugins {
	id "java"
	id "application"
	id "maven-publish"
}

project.ext {
	version = "0.1-dev1.3"
	groupId = "local.ytk.g.platformer1"
	artifactId = "Platformer1"
	name = "Platformer Library"
	description = "A library for making 2.5D platformers"
	url = "https://www.example.com/library"
	year = 2025
	license = "GNU General Public License v3.0";
	licenseUrl = "https://www.gnu.org/licenses/gpl-3.0.html"
	developer = "ytk"
	developerId = "ytk"
	developerEmail = "email@example.com"

	lwjglVersion = "3.3.2"
	jomlVersion = "1.10.5"
	lwjgl3AwtVersion = "0.1.8"
	steamworks4jVersion = "1.9.0"
	steamworks4jServerVersion = "1.9.0"

	jmonkeyengineVersion = "3.6.1-stable"
}
switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
			? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
			: "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
		break
	case OperatingSystem.WINDOWS:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.contains("64")
			? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
			: "natives-windows-x86"
		break
}

mainClassName = "local.ytk.g.platformer1.Platformer1"

application {
	mainClass = "local.ytk.g.platformer1.Platformer1"
}

repositories {
	maven { url "https://jitpack.io" }
    mavenCentral()
	mavenLocal()
	maven { url "https://libraries.minecraft.net" }
}

dependencies {
	compileOnly "org.jetbrains:annotations:24.1.0"
	
	/* LWJGL */
	implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

	implementation "org.lwjgl:lwjgl"
	implementation "org.lwjgl:lwjgl-assimp"
	implementation "org.lwjgl:lwjgl-bgfx"
	implementation "org.lwjgl:lwjgl-cuda"
	implementation "org.lwjgl:lwjgl-egl"
	implementation "org.lwjgl:lwjgl-fmod"
	implementation "org.lwjgl:lwjgl-freetype"
	implementation "org.lwjgl:lwjgl-glfw"
	implementation "org.lwjgl:lwjgl-harfbuzz"
	implementation "org.lwjgl:lwjgl-hwloc"
	implementation "org.lwjgl:lwjgl-jawt"
	implementation "org.lwjgl:lwjgl-jemalloc"
	implementation "org.lwjgl:lwjgl-ktx"
	implementation "org.lwjgl:lwjgl-libdivide"
	implementation "org.lwjgl:lwjgl-llvm"
	implementation "org.lwjgl:lwjgl-lmdb"
	implementation "org.lwjgl:lwjgl-lz4"
	implementation "org.lwjgl:lwjgl-meow"
	implementation "org.lwjgl:lwjgl-meshoptimizer"
	implementation "org.lwjgl:lwjgl-nanovg"
	implementation "org.lwjgl:lwjgl-nfd"
	implementation "org.lwjgl:lwjgl-nuklear"
	implementation "org.lwjgl:lwjgl-odbc"
	implementation "org.lwjgl:lwjgl-openal"
	implementation "org.lwjgl:lwjgl-opencl"
	implementation "org.lwjgl:lwjgl-opengl"
	implementation "org.lwjgl:lwjgl-opengles"
	implementation "org.lwjgl:lwjgl-openvr"
	implementation "org.lwjgl:lwjgl-openxr"
	implementation "org.lwjgl:lwjgl-opus"
	implementation "org.lwjgl:lwjgl-ovr"
	implementation "org.lwjgl:lwjgl-par"
	implementation "org.lwjgl:lwjgl-remotery"
	implementation "org.lwjgl:lwjgl-rpmalloc"
	implementation "org.lwjgl:lwjgl-shaderc"
	implementation "org.lwjgl:lwjgl-spvc"
	implementation "org.lwjgl:lwjgl-sse"
	implementation "org.lwjgl:lwjgl-stb"
	implementation "org.lwjgl:lwjgl-tinyexr"
	implementation "org.lwjgl:lwjgl-tinyfd"
	implementation "org.lwjgl:lwjgl-tootle"
	implementation "org.lwjgl:lwjgl-vma"
	implementation "org.lwjgl:lwjgl-vulkan"
	implementation "org.lwjgl:lwjgl-xxhash"
	implementation "org.lwjgl:lwjgl-yoga"
	implementation "org.lwjgl:lwjgl-zstd"
	runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-bgfx::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-freetype::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-harfbuzz::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-hwloc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-jemalloc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-ktx::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-libdivide::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-llvm::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-lmdb::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-lz4::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-meow::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-meshoptimizer::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nanovg::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nfd::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-nuklear::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openvr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-openxr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-opus::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-ovr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-par::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-remotery::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-rpmalloc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-shaderc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-spvc::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-sse::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tinyexr::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tinyfd::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-tootle::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-vma::$lwjglNatives"
	if (lwjglNatives == "natives-macos" || lwjglNatives == "natives-macos-arm64") runtimeOnly "org.lwjgl:lwjgl-vulkan::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-xxhash::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-yoga::$lwjglNatives"
	runtimeOnly "org.lwjgl:lwjgl-zstd::$lwjglNatives"
	implementation "org.joml:joml:${jomlVersion}"
	implementation "org.lwjglx:lwjgl3-awt:${lwjgl3AwtVersion}"
	implementation "com.code-disaster.steamworks4j:steamworks4j:${steamworks4jVersion}"
	implementation "com.code-disaster.steamworks4j:steamworks4j-server:${steamworks4jServerVersion}"
	
	
	// OGRE 3D
	// NOT USED
	// implementation files("dependencies/ogre-${ogreVersion}/share/java/Ogre-${ogreVersion}.jar")
	// runtimeOnly files("dependencies/ogre-${ogreVersion}/lib/OgreJNI.dll")
	
	/* JMonkey */
	implementation 'org.jmonkeyengine:jme3-core:' + jmonkeyengineVersion
	implementation 'org.jmonkeyengine:jme3-desktop:' + jmonkeyengineVersion
	runtimeOnly 'org.jmonkeyengine:jme3-jogg:' + jmonkeyengineVersion
	runtimeOnly 'org.jmonkeyengine:jme3-plugins:' + jmonkeyengineVersion
	
	implementation 'org.jmonkeyengine:jme3-effects:' + jmonkeyengineVersion
	implementation 'org.jmonkeyengine:jme3-terrain:' + jmonkeyengineVersion
	implementation 'org.jmonkeyengine:jme3-networking:' + jmonkeyengineVersion
	implementation 'org.jmonkeyengine:jme3-jbullet:' + jmonkeyengineVersion
	runtimeOnly 'org.jmonkeyengine:jme3-lwjgl3:' + jmonkeyengineVersion
	implementation "org.jmonkeyengine:jme3-testdata:" + jmonkeyengineVersion
	
	implementation 'com.simsilica:lemur:1.16.0'
	implementation 'com.simsilica:lemur-proto:1.13.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
	implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
	implementation "org.jmonkeyengine:jme3-effects:$jmonkeyengineVersion"
	implementation "org.jmonkeyengine:jme3-terrain:$jmonkeyengineVersion"
	implementation "org.jmonkeyengine:jme3-vr:$jmonkeyengineVersion"
	implementation "com.github.stephengold:Heart:8.7.0"
	implementation "com.epagagames:particlemonkey:1.1.0"
	
	// Utilities
	implementation "com.google.guava:guava:32.1.2-jre"
	implementation "it.unimi.dsi:fastutil:8.5.12"
	implementation "org.apache.commons:commons-lang3:3.13.0"
	implementation "org.apache.commons:commons-collections4:4.4"
	implementation "io.netty:netty-all:4.1.99.Final"
//	implementation "org.json:json:"
	
	// JavaUtils
	implementation project("JavaUtils")

	//
	implementation "com.mojang:datafixerupper:1.0.20"
	implementation "com.mojang:brigadier:1.0.18"
	
	// Testing only
	testImplementation "org.junit.jupiter:junit-jupiter:5.10.3"
	
	// Assets sub-project
  	runtimeOnly project(":assets")
}

test {
	useJUnitPlatform()
}

jar {
	manifest {
		attributes "Main-Class": "local.ytk.g.platformer1.Platformer1"
	}
}

project(":assets") {
	apply plugin: "java"

    buildDir = rootProject.file("build/assets")

    sourceSets {
        main {
            resources {
                srcDir '.'
            }
        }
    }
}

publishing {
    publications {
		maven(MavenPublication) {
            groupId = "$groupId"
            artifactId = "$artifactId"
            version = "$version"

            from components.java
        }
        mavenJava(MavenPublication) {
            pom {
                name = "$name"
                description = "$description"
                url = "$url"
				inceptionYear = "$year"
                properties = [
					example: "value"
				]
                licenses {
                    license {
                        name = "$license"
                        url = "$licenseUrl"
                    }
                }
                developers {
                    developer {
                        name = "$developer"
                        id = "$developerId"
                        email = "$developerEmail"
                    }
                }
                scm {
                    connection = "scm:git:git://example.com/my-library.git"
                    developerConnection = "scm:git:ssh://example.com/my-library.git"
                    url = "https://example.com/my-library/"
                }
            }
        }
    }
}